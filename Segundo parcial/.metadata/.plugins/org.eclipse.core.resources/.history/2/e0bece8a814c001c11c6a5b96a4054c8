#include "Editorial.h"

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>

eEditorial* editorial_new()
{
	eEditorial* newEditorial;
	newEditorial = (eEditorial*)malloc(sizeof(newEditorial));

    if(newEditorial != NULL)
    {
    	newEditorial->idEditorial = 0;
        strcpy(newEditorial->nombre, " ");
    }

    return newEditorial;
}
eEditorial* editorial_newParametros(char* idStr, char* nombreStr)
{
	eEditorial* newEditorial ;
	newEditorial = editorial_new();

    int id;

    if(idStr != NULL &&  newEditorial != NULL ){
		id= atoi(idStr);

		editorial_setId(newEditorial, id);
		editorial_setNombre(newEditorial, nombreStr);
    }

    return newEditorial;
}
void editorial_delete(eEditorial* this){

	if(this!=NULL){
		free(this);
	}

}
int editorial_setId(eEditorial* this,int id){
	int retorno;
	retorno = -1;
	if(this!= NULL && id>=0){
		this->idEditorial = id;
		retorno = 0;
	}
	return retorno;
}
int editorial_getId(eEditorial* this,int* id){
    int retorno;
	retorno = -1;
	if(this!= NULL){
		*id  = this->idEditorial;
		retorno = 0;
	}
	return retorno;
}

int editorial_setNombre(eEditorial* this,char* nombre){
	int retorno;
	retorno = -1;
	if(this!= NULL){

	  strcpy(this->nombre , nombre);
	  this->nombre[0] = toupper(this->nombre[0]);

	  retorno = 0;
	}
	return retorno;
}
int editorial_getNombre(eEditorial* this,char* nombre){
	int retorno;
	retorno = -1;
	if(this!= NULL && nombre != NULL){

	  strcpy(nombre, this->nombre);

	  retorno = 0;
	}
	return retorno;
}
int editorial_getNameById(LinkedList* pArrayEditorial, int id, char* editorialName){
	eEditorial* pEditorial;
	int retorno = -1;
    int idAComparar;
	for(int i = 0; i< ll_len(pArrayEditorial); i++){
		pEditorial = ll_get(pArrayEditorial, i);
        idAComparar = editorial_getId(pArrayEditorial, id);
		if(idAComparar == id){
			 editorial_getNombre(pArrayEditorial, editorialName);
			retorno = 0;
		}
	}
	return retorno;
}
